language: cpp
dist: xenial # get a semi-modern linux

branches:
  only:
    - travis-ci
    - dev
    # - master

matrix:
  include:
    - os: osx
      compiler: clang
      env:
        - MATRIX_EVAL=""

    # TODO: currently fails due to --std=c++11 flag inclusion 
    #       since cmake detects mac/clang and gcc barfs rather than ignores
    # - os: osx
    #   compiler: gcc
    #   env:
    #     - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    # - os: linux
    #   compiler: clang
    #   env:
    #     - MATRIX_EVAL=""

    # - os: linux
    #   compiler: gcc
    #   env:
    #     - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"



git:
  submodules: false # submodule init handled by prep-third-party.sh

cache:
  directories:
    - .galaxy
    - third-party/ispc
    - third-party/embree
    - third-party/ospray
    - third-party/rapidjson
    - third-party/VTK-8.1.2

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-7
      - libtbb-dev
      - libboost-all-dev
      - mpi-default-dev
      - freeglut3-dev
      - libxrandr-dev
      - libxinerama-dev
      - libxcursor-dev
      - perceptualdiff
      - python-numpy
  homebrew:
    packages: 
      - vtk
      - tbb
      - boost
      - open-mpi
      - freeglut
      - perceptualdiff
      # - gcc@7

before_install:
  - eval "${MATRIX_EVAL}"

script:
  # use this line only to rebuild VTK cache for linux
  # - rm -rf third-party/VTK-8.1.2 ; GXY_REBUILDING_CACHE=1

  # special one-time change to pull static embree into ospray
  - rm -rf third-party/embree/install/* third-party/ospray/install/*
  - pushd third-party/embree && patch -N -p1 < ../patches/embree.patch && rm -rf build/* && cd build && cmake -D EMBREE_STATIC_LIB:BOOL=ON .. && make -j 4 install; popd
  - pushd third-party/ospray && patch -N -p1 < ../patches/ospray.patch && rm -rf build/* && cd build && cmake .. && make -j 4 install; popd
  - find . -name '*.rej' -exec rm '{}' \;

  # the travis-ci build script does the following:
  # 0a. if VTK not built: build, cache and exit (linux only, osx has a brew install)
  # 0b. if no VTK python wrappers: build, cache and exit (linux only)
  # 0c. if no third-party builds (ospray, embree, rapidjson): build and cache 
  # 1. build Galaxy interactive interface
  # 2. build Galaxy image writing interface
  # 3. run gold image tests
  # - scripts/travis-ci-build.sh
  # - if [ -z ${GXY_REBUILDING_CACHE} ] && [ -f install/bin/vis ]; then tests/image-gold-tests.sh; fi

notifications:
  slack:
    secure: C9Y7Aqdo+6mK3K4js+mGyMXDR2+Nf0XY4ELPChV7T3WX2bUjxHMMSrRhOJPMAg6oxGjdFXJUSkzyy+nuUjkF4xAlMmDcNTkO/tgjSO7PGhJf0s4p6WGqKDwAlhqDNJKiJp7nXE88rCLLI4jjkQx5jQGbJuymugTyZbTT9bvui8MP5F4jMGakaHflYgL6RGZc+mLmENFxBgeniQLuRVu1vZj3Kf5HTYQoBIDe9DalOJbEk1qfC12s1ycYv0M0DXLqIt2T8mt9054pu0wbsE47iXcY2ujdZELzIncsqNK46e/waqovSxkWvXNavlvKxMEkW0etKof/XPM/aFOOb0eA/HVOaOKROp59j/IHYKiC4Pwgkg0CBGJiMjrHTgDoghXtPBQ2JTC/Ng3eSPIe9crJuAt0c1RRN+fg+N1RifCDCNcQzt4Xm6ek20ozjGMHwgD1j16gdUP8pqVX7gweo1vEPUn7RMnHdIeCqTyIGVEk0g9cGunEbIzDnPE1h1BcT9RYdg8QakUNgJdfy3aS+PsVNgsuzxAxfOkN3AdiVkHMCvSnR+SH9JCh4NdfOV6x6n9fwnOrE5Wupxz65ZWL4TFso9Anb3KA/csZktFCeb44NRBo0BqROHSC3EGBK/rHfw3ni4ZEEN56lW1BdVdms4XPpVn8LMhFUOwe1qNYJYEVxqg=

